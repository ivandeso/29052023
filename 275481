#include <SoftwareSerial.h>  // Inclui a biblioteca SoftwareSerial

// Pinos do módulo Bluetooth
const int bluetoothTx = 2;  // Pino de transmissão do módulo Bluetooth conectado ao pino D2 do Arduino Nano
const int bluetoothRx = 3;  // Pino de recepção do módulo Bluetooth conectado ao pino D3 do Arduino Nano

SoftwareSerial bluetooth(bluetoothTx, bluetoothRx);  // Cria uma instância do objeto SoftwareSerial

// Variáveis para armazenar os tempos
unsigned long tempoInicio;
unsigned long duracaoAlto;
unsigned long duracaoBaixo;
bool nivelAlto = false;

// Tamanho máximo do buffer para o arquivo CSV
const int BUFFER_SIZE = 128;
char buffer[BUFFER_SIZE];

// Função de interrupção para detectar mudanças no pino D2
void interrupcao() {
  if (digitalRead(2) == HIGH) {
    if (!nivelAlto) {
      tempoInicio = micros();  // Registra o tempo de início do nível alto
      nivelAlto = true;
    }
  } else {
    if (nivelAlto) {
      unsigned long tempoFim = micros();  // Registra o tempo de fim do nível alto
      duracaoAlto = tempoFim - tempoInicio;  // Calcula a duração do sinal alto
      nivelAlto = false;
    } else {
      duracaoBaixo = micros() - tempoInicio;  // Calcula a duração do sinal baixo
    }
  }
}

void setup() {
  pinMode(2, INPUT);  // Configura o pino D2 como entrada
  attachInterrupt(digitalPinToInterrupt(2), interrupcao, CHANGE);  // Associa a função de interrupção ao pino D2

  Serial.begin(9600);  // Inicia a comunicação serial para depuração
  bluetooth.begin(9600);  // Inicia a comunicação serial com o módulo Bluetooth
}

void loop() {
  // Exibe a duração em milissegundos
  Serial.print("Duração Alto: ");
  Serial.print(duracaoAlto / 1000);
  Serial.print(" ms\t");

  Serial.print("Duração Baixo: ");
  Serial.print(duracaoBaixo / 1000);
  Serial.println(" ms");

  // Cria o conteúdo do arquivo CSV
  snprintf(buffer, BUFFER_SIZE, "Duracao Alto (ms),Duracao Baixo (ms)\n%lu,%lu\n", duracaoAlto / 1000, duracaoBaixo / 1000);

  // Envia o conteúdo do arquivo por Bluetooth
  bluetooth.println(buffer);

  delay(100);  // Aguarda 100 milissegundos 
}
